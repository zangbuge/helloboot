jasypt:
  encryptor:
    password: 123456

# server.tomcat.basedir 设置springboot上传文件临时文件夹
server:
  tomcat:
    basedir: /app/temp
  port: 8086
  servlet:
    context-path: /helloboot

spring:
  profiles:
    active: @prop.name@
  datasource:
    master:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3308/catering?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC&useSSL=false
      username: root
      password: 123456

    slaver:
      driver-class-name: oracle.jdbc.driver.OracleDriver
      url: jdbc:oracle:thin:@127.0.0.1:1521:orcl
      username: xxx
      password: xxx

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    cache: false #关闭缓存

  kafka:
    bootstrap-servers: xxx:xxxx
    listener:
      missing-topics-fatal: false

    producer:
      #重试次数
      retries: 0
      #produce积累到一定数据，一次发送
      batch-size: 16384
      #produce积累数据一次发送
      buffer-memory: 33554432
      #procedure要求leader在考虑完成请求之前收到的确认数，用于控制发送记录在服务端的持久化，其值可以为如下：
      #acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
      #acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
      #acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
      #可以设置的值为：all, -1, 0, 1
      acks: 1
      #指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

    consumer:
      properties:
        group.id: defaultConsumerGroup
        session.timeout.ms: 120000
        request.timeout.ms: 180000
      enable-auto-commit: true
      auto.commit.interval.ms: 1000
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

## 该配置节点为独立的节点，将这个配置放在spring的节点下，导致配置无法被识别
#mybatis:
#    mapper-locations:  classpath*:com/hugmount/*/mapper/*.xml  # 注意：一定要对应mapper映射xml文件的所在路径
#    type-aliases-package: com.hugmount.helloboot.*.pojo # 注意：对应实体类的路径

## 配置pageHelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check

## Dubbo 服务提供者配置
dubbo:
  application:
    ###########注册到注册中心的名称############
    name: helloboot
  ###########采用协议和端口号################
  protocol:
    ###########采用dubbo协议####################
    name: dubbo
    ###########发布dubbo端口号为20880###########
    port: 20881
  registry:
    ###########注册中心地址#####################
    address: zookeeper://192.168.10.180:2182
  consumer:
    timeout: 30000
    check: false
    retries: 0

thrift:
  port: 9899
  host: localhost

mongo:
  host: www.fxitalk.com
  port: 27017
  username: admin
  password: 123456
  database: admin

redis:
  address: redis://www.fxitalk.com:6379
  password: 123456
  database: 0

# jvm参数配置环境 -Denv=dev ,meta地址为config地址非登录地址
apollo:
  meta: http://localhost:8080
  cacheDir: /opt/data/
  bootstrap:
    enabled: true
    namespaces: application
app:
  id: helloboot

env: local

xxl:
  job:
    accessToken: default_token
    executor:
      port: 9999
      appname: xxl-job-executor-sample-test
      logpath: /data/applogs/xxl-job/jobhandler
      logretentiondays: 30
    admin:
      addresses: http://127.0.0.1:8080/xxl-job-admin

pay:
  channel:
    - 'zfb'
    - 'wx'